buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply	plugin:	'java'
apply   plugin: 'org.springframework.boot'


apply   plugin: 'idea'
//apply plugin: 'eclipse'
apply   plugin: 'project-report'

sourceCompatibility = 1.8
targetCompatibility = 1.8

/*
jar {
    baseName = 'humanResources'
    version =  '0.0.1-SNAPSHOT'
}*/

apply plugin: 'war'

war {
    baseName = 'humanResources'
    version =  '0.0.1-SNAPSHOT'
}

springBoot {
    mainClass = "org.humanResources.web.SpringBootHumanResourcesApplication"
}

//version = '1.0'

/*jar file name*/
//archivesBaseName = "humanResources"


idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

/*
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}*/


repositories {
   // mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {

   // compile('org.springframework.boot:spring-boot-starter')
    compile("org.springframework.boot:spring-boot-starter-web")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    //runtime('com.h2database:h2')

    testCompile	('junit:junit:4.12'){
        // exclude module: 'hamcrest-core'
    }
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.assertj:assertj-core:3.6.1'
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}


/* how to export dependencies
task copyToLib(type: Copy) {
    into "lib"
    from configurations.runtime
}
*/
task copyDependencies(type: Copy) {
    from configurations.testCompile
    into 'dependencies'
}

/*
task helloWorld <<	{
    println	"Hello,	World!"
}*/