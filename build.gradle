
allprojects {
    group = 'org.humanResources'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'eclipse'
    apply plugin: 'idea'


    task wrapper(type: Wrapper) {
        gradleVersion = '3.2.1'
    }
}

description = 'The human resources application'

buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



subprojects {
    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: 'eclipse-wtp'
    //apply plugin: 'war'
    apply plugin: 'org.springframework.boot'

   // apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    //apply from: rootProject.file('gradle/eclipse.gradle')

    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {

        // Start: JUnit
        /*testCompile('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'commons-logging'
        }*/
        // End: JUnit

        // Start: Spring Boot Web
       // compile('org.springframework.boot:spring-boot-starter-web') {
        //    exclude module: 'spring-boot-starter-tomcat'
       // }
        // End: Spring Boot Web

        // Start: Database
        compile 'org.springframework.boot:spring-boot-starter-data-jpa'
     //   compile 'org.hibernate:hibernate-validator:5.1.3.Final' //JSR303 Validation Support
     //   compile 'org.liquibase:liquibase-core:3.3.2'
    //    testCompile 'com.h2database:h2:1.4.185'
        // End: Database

        // Start: Apache Commons
        compile 'org.apache.commons:commons-lang3:3.4'
        // End: Apache Commons

        // Start: Spring Boot Actuator
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        // End: Spring Boot Actuator


        compile("org.springframework.boot:spring-boot-starter-web")

        //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        compile("org.springframework.boot:spring-boot-starter-tomcat")

        //compile("org.springframework.boot:spring-boot-starter-data-jpa")


        compile ("com.oracle:ojdbc7:12.1.0.1")

        //runtime('com.h2database:h2')

        /*testCompile	('junit:junit:4.12'){
            // exclude module: 'hamcrest-core'
        }*/
        //testCompile("org.springframework.boot:spring-boot-starter-test")


        // Start: JUnit
        testCompile('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'commons-logging'
        }
        // End: JUnit

        testCompile 'org.assertj:assertj-core:3.6.1'


        compile	'org.scala-lang:scala-library:2.12.1'


        compile "com.querydsl:querydsl-jpa:4.1.4"

        compile "com.querydsl:querydsl-apt:4.1.4:jpa" //
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    bootRun {
        // Ensures IntelliJ can load resource files
        addResources = false
    }
}

//apply from: rootProject.file('gradle/profiles.gradle');










/*
allprojects {
    apply plugin: 'idea'
  //  apply plugin: 'eclipse'

    group = 'org.humanResources'
    version = '0.0.1-SNAPSHOT'
}*/
/*allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }

    //tasks.withType(JavaCompile) {
    //    options.incremental = true
    //}
}*/

/*
subprojects {

    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.ext {
        springBootVersion = '1.4.2.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}*/
/*
apply	plugin:	'java'
apply   plugin: 'org.springframework.boot'


//apply   plugin: 'idea'
//apply plugin: 'eclipse'
apply   plugin: 'project-report'

sourceCompatibility = 1.8
targetCompatibility = 1.8



apply plugin: 'war'

war {
    baseName = 'humanResources'
    version =  '0.0.1-SNAPSHOT'
}

springBoot {
    mainClass = "org.humanResources.web.SpringBootHumanResourcesApplication"
}*/

//version = '1.0'

//archivesBaseName = "humanResources"

/*
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
*/
/*
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}*/

/*
repositories {
   // mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    mavenLocal()
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web")

    //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")


    compile ("com.oracle:ojdbc7:12.1.0.1")

    //runtime('com.h2database:h2')

    testCompile	('junit:junit:4.12'){
        // exclude module: 'hamcrest-core'
    }
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.assertj:assertj-core:3.6.1'
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
*/

/* how to export dependencies
task copyToLib(type: Copy) {
    into "lib"
    from configurations.runtime
}
*/

/*
task copyDependencies(type: Copy) {
    from configurations.testCompile
    into 'dependencies'
}*/

/*
task helloWorld <<	{
    println	"Hello,	World!"
}*/